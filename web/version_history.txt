CARD BATTLE - HISTÓRICO DE VERSÕES

==============================
ROADMAPS FUTUROS

- Permitir apenas uma sessão para o mesmo PlayerID.
- Tratamento de retorno de erros e sucesso (CardBattleServiceResult) nos serviços
- Classes de testes para os serviços, status, web, exceções etc.
- Lidar com situações de erro (ex: comandos inválidos)
- Permitir digitar um comando próprio via interface web.
- Não pegar atualizações de outras batalhas sem ser a sua.
- Criar tratamento de interrupção de autoupdate ("Stop").
- Melhorar documentação front-end (HTML e JS).
- Lidar com desconexões do lado do servidor:
  WARN:oejs.ServletHandler:/CardBattle
  java.lang.IllegalStateException: IDLE,initial
	at org.eclipse.jetty.server.AsyncContinuation.complete(AsyncContinuation.java:582)
	at cardbattle.server.CardBattleServlet.updateAsyncConnections(CardBattleServlet.java:80)
	at cardbattle.server.CardBattleServlet.doGet(CardBattleServlet.java:46)

==============================
VERSÃO ATUAL

Versão 0.2.3 - LOGIN
Início: 18/nov/2015
Liberação: 18/nov/2015

- Criação de LoginServlet.
- Novo index.html simula página de login.
- Criação de cardbattle.js.
- index.html antigo renomeado para debug.html.

==============================
VERSÕES ANTERIORES

Versão 0.2.2 - BATTLE ROOMS
Início: 16/nov/2015
Liberação: 18/nov/2015

- Implementação dos conceitos de BattleRoom e Player
- BattleManager deixa de ser classe utilitária estática e passa a ser singleton

Versão 0.2.1 - REFACTORING
Início: 14/nov/2015
Liberação: 15/nov/2015 (0.2.1 e 0.2.1b)

0.2.1b
- Atualizações no README.md
- Conversão do encoding do version_history.txt e do README.md para UTF-8
- Inclusão do .gitignore

0.2.1
- Sem alterações de lógica no código.
- Refactoring pesado na parte do Servlet e do Serviço.
- Redistribuição interna do código em pacotes:

  > web: Front-end. Requer Jetty ou algum servidor de aplicações.
     - cardbattle.web
          Servlet e integração com back-end
     - cardbattle.web.impl
          Implementação para fazer a parte web funcionar
  
  > src: Back-end. Standalone, não requer servidor de aplicações.
     - cardbattle.battle
          Toda parte "core" de batalha do CardBattle
     - cardbattle.battle.definitions
          Definições estáticas da batalha
     - cardbattle.battle.execution
          Guarda estados das batalhas executando
     - cardbattle.battle.status
          Trata os status da batalha para apresentação para o cliente
     - cardbattle.common
          Classes comuns / utilitárias / exceções
     - cardbattle.service
          Interface com o front-end da parte interna
     - cardbattle.server --deprecated, morre na 0.3--
          Implementação anterior da interface com o front-end.
    
  > test: Testes

------------------------------

Versão 0.2 - ASYNC SERVLET
Início: 12/nov/2015
Liberação: 14/nov/2015

- Aprimoramento da interface HTML para o Servlet.
- Criação do version_history.txt.
- Criação do conceito "BattleManager Uptime" e serviço "uptime"
- Criação do serviço "status [battleId] [sinceTime]"
- Primeira versão do Async Servlet.

------------------------------

Versão 0.1 - SERVLET
Início: 11/nov/2015

  Criação do BattleManager.
  Criação do Servlet.
  Criação do Services.
  Criação do HTML de acesso ao Servlet.
  Criação do readme.md.
  Primeira execução de Servlet com sucesso. 

------------------------------

Versão 0.0 - BASE DO CÓDIGO
Início: 05/nov/2015

  Primeira versão disponível no GitHub.
  Criação do core do CardBattle com testes unitários.
  Separada a avaliação de Skills em uma classe a parte.
  Implementação do conceito de CharacterTemplate com conjunto de skills.
  Criadas todas as skills do Lash e do Ayllan.
  Skills do Ayllan ainda não estão definitivas, mas estão funcionais. 

==============================
